@model BookstoreApp.Models.BookListModel
@{
    ViewBag.Title = "Add Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string Image = "~/Content/Image/noImage.jpg";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />
<link href="~/Content/formcss.css" rel="stylesheet" />
<link href="~/Content/responsivecss.css" rel="stylesheet" />
<div class="container-fluid mobile-space">
    <div class="panel panel-primary filterable">
        <div class="panel-heading">
            <h3 class="panel-title">Add Book</h3>

        </div>
        <br />
        @using (Html.BeginForm("SaveBookData", "BookStore", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "Book_form", @style = "padding: 36px;" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BookId)
                <div class="form-group">
                    @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.AuthorName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookPublication, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookPublication, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookPublication, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.BookDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookDate, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.BookDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookISBN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookISBN, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.BookPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookPrice, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BookDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookDescription, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.BookPic, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @if (Model.BookPic != null && Model.BookPic != "")
                        {
                            Image = Model.BookPic;
                        }
                        <img id='imgBook' name='imgBookImage' src="@Url.Content(Image)"
                             alt="No Image " style="width:110px; height:110px;">
                        <input type="file" id='BookPicImage' name='BookPicImage' onchange="AddBookImage(this);" value="Upload Book Image">
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save Book" class="btn btn-primary" style="float: right;
        margin-right: 44px;
        width: 200px;
" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
<script>
    $(".datepicker").datepicker({
        autoclose: true,
        todayHighlight: true
    });
    function AddBookImage(input) {
        var FType = ["jpg", "JPG", "PNG", "png", "JPEG", "jpeg", "gif", "GIF"]
        if (input.files && input.files[0]) {
            var LoadImage = false;
            var FileExtension = input.value.split(".")[1];
            for (var v = 0; v < FType.length; v++) {
                if (FType[v] == FileExtension) {
                    LoadImage = true;
                }
            }
            if (LoadImage == true) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgBook')//WorkOrderImage
                        .attr('src', e.target.result)
                        .width(110)
                        .height(110);

                };

                reader.readAsDataURL(input.files[0]);
            } else {
                $(input).val("");
                alert("Please select image to upload!")
                return false;
            }
        }
    }
    $(".input").focus(function () {
        $(this).parent().addClass("focus");
    })
</script>
